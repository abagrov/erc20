/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BadToken, BadTokenInterface } from "../BadToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractOwner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_contractOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "sucess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "sucess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [
      {
        internalType: "bool",
        name: "sucess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a9d38038062001a9d833981810160405281019062000037919062000213565b84600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836000908051906020019062000090929190620000c3565b508260019080519060200190620000a9929190620000c3565b5081600281905550806003819055505050505050620004a9565b828054620000d1906200039a565b90600052602060002090601f016020900481019282620000f5576000855562000141565b82601f106200011057805160ff191683800117855562000141565b8280016001018555821562000141579182015b828111156200014057825182559160200191906001019062000123565b5b50905062000150919062000154565b5090565b5b808211156200016f57600081600090555060010162000155565b5090565b60006200018a6200018484620002f0565b620002c7565b905082815260208101848484011115620001a357600080fd5b620001b084828562000364565b509392505050565b600081519050620001c98162000475565b92915050565b600082601f830112620001e157600080fd5b8151620001f384826020860162000173565b91505092915050565b6000815190506200020d816200048f565b92915050565b600080600080600060a086880312156200022c57600080fd5b60006200023c88828901620001b8565b955050602086015167ffffffffffffffff8111156200025a57600080fd5b6200026888828901620001cf565b945050604086015167ffffffffffffffff8111156200028657600080fd5b6200029488828901620001cf565b9350506060620002a788828901620001fc565b9250506080620002ba88828901620001fc565b9150509295509295909350565b6000620002d3620002e6565b9050620002e18282620003d0565b919050565b6000604051905090565b600067ffffffffffffffff8211156200030e576200030d62000435565b5b620003198262000464565b9050602081019050919050565b600062000333826200033a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156200038457808201518184015260208101905062000367565b8381111562000394576000848401525b50505050565b60006002820490506001821680620003b357607f821691505b60208210811415620003ca57620003c962000406565b5b50919050565b620003db8262000464565b810181811067ffffffffffffffff82111715620003fd57620003fc62000435565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b620004808162000326565b81146200048c57600080fd5b50565b6200049a816200035a565b8114620004a657600080fd5b50565b6115e480620004b96000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d35780639dc29fac146101f1578063a9059cbb14610221578063dd62ed3e14610251578063f2fde38b14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce5671461015557806340c10f1914610173575b600080fd5b6100c16102b1565b6040516100ce91906111ee565b60405180910390f35b6100f160048036038101906100ec9190611091565b61033f565b6040516100fe91906111d3565b60405180910390f35b61010f6104a0565b60405161011c91906112b0565b60405180910390f35b61013f600480360381019061013a9190611042565b6104a6565b60405161014c91906111d3565b60405180910390f35b61015d610812565b60405161016a91906112b0565b60405180910390f35b61018d60048036038101906101889190611091565b610818565b60405161019a91906111d3565b60405180910390f35b6101bd60048036038101906101b89190610fdd565b610989565b6040516101ca91906112b0565b60405180910390f35b6101db6109d2565b6040516101e891906111ee565b60405180910390f35b61020b60048036038101906102069190611091565b610a60565b60405161021891906111d3565b60405180910390f35b61023b60048036038101906102369190611091565b610bd1565b60405161024891906111d3565b60405180910390f35b61026b60048036038101906102669190611006565b610de0565b60405161027891906112b0565b60405180910390f35b61029b60048036038101906102969190610fdd565b610e67565b6040516102a891906111d3565b60405180910390f35b600080546102be906113ec565b80601f01602080910402602001604051908101604052809291908181526020018280546102ea906113ec565b80156103375780601f1061030c57610100808354040283529160200191610337565b820191906000526020600020905b81548152906001019060200180831161031a57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a790611230565b60405180910390fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161048e91906112b0565b60405180910390a36001905092915050565b60035481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e90611230565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e90611230565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060090611270565b60405180910390fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bf90611290565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610717919061133d565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461076d91906112e7565b9250508190555081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610800919061133d565b92505081905550600190509392505050565b60025481565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a190611210565b60405180910390fd5b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108f991906112e7565b92505081905550816003600082825461091291906112e7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161097791906112b0565b60405180910390a36001905092915050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600180546109df906113ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0b906113ec565b8015610a585780601f10610a2d57610100808354040283529160200191610a58565b820191906000526020600020905b815481529060010190602001808311610a3b57829003601f168201915b505050505081565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae990611210565b60405180910390fd5b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b41919061133d565b925050819055508160036000828254610b5a91906112e7565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bbf91906112b0565b60405180910390a36001905092915050565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4c90611250565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc90611230565b60405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d14919061133d565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d6a91906112e7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dce91906112b0565b60405180910390a36001905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ef9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef090611210565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f69576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6090611230565b60405180910390fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600081359050610fc281611580565b92915050565b600081359050610fd781611597565b92915050565b600060208284031215610fef57600080fd5b6000610ffd84828501610fb3565b91505092915050565b6000806040838503121561101957600080fd5b600061102785828601610fb3565b925050602061103885828601610fb3565b9150509250929050565b60008060006060848603121561105757600080fd5b600061106586828701610fb3565b935050602061107686828701610fb3565b925050604061108786828701610fc8565b9150509250925092565b600080604083850312156110a457600080fd5b60006110b285828601610fb3565b92505060206110c385828601610fc8565b9150509250929050565b6110d681611383565b82525050565b60006110e7826112cb565b6110f181856112d6565b93506111018185602086016113b9565b61110a8161147c565b840191505092915050565b6000611122601f836112d6565b915061112d8261148d565b602082019050919050565b60006111456017836112d6565b9150611150826114b6565b602082019050919050565b60006111686011836112d6565b9150611173826114df565b602082019050919050565b600061118b6023836112d6565b915061119682611508565b604082019050919050565b60006111ae601e836112d6565b91506111b982611557565b602082019050919050565b6111cd816113af565b82525050565b60006020820190506111e860008301846110cd565b92915050565b6000602082019050818103600083015261120881846110dc565b905092915050565b6000602082019050818103600083015261122981611115565b9050919050565b6000602082019050818103600083015261124981611138565b9050919050565b600060208201905081810360008301526112698161115b565b9050919050565b600060208201905081810360008301526112898161117e565b9050919050565b600060208201905081810360008301526112a9816111a1565b9050919050565b60006020820190506112c560008301846111c4565b92915050565b600081519050919050565b600082825260208201905092915050565b60006112f2826113af565b91506112fd836113af565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113325761133161141e565b5b828201905092915050565b6000611348826113af565b9150611353836113af565b9250828210156113665761136561141e565b5b828203905092915050565b600061137c8261138f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156113d75780820151818401526020810190506113bc565b838111156113e6576000848401525b50505050565b6000600282049050600182168061140457607f821691505b602082108114156114185761141761144d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f596f7520617265206e6f742074686520636f6e7472616374206f776e65722e00600082015250565b7f456d70747920616464726573732070726f76696465642e000000000000000000600082015250565b7f4e6f7420656e6f7567682066756e64732e000000000000000000000000000000600082015250565b7f4e6f7420656e6f7567682066756e6473206f6e2073656e6465722062616c616e60008201527f63652e0000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f7567682066756e6473207765726520616c6c6f7765642e0000600082015250565b61158981611371565b811461159457600080fd5b50565b6115a0816113af565b81146115ab57600080fd5b5056fea2646970667358221220414bdd9cc5c4f14d58a9ec39037b8584a37e14268ceb554fab3f10534ec55f4e64736f6c63430008040033";

type BadTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BadTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BadToken__factory extends ContractFactory {
  constructor(...args: BadTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _contractOwner: string,
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BadToken> {
    return super.deploy(
      _contractOwner,
      _name,
      _symbol,
      _decimals,
      _totalSupply,
      overrides || {}
    ) as Promise<BadToken>;
  }
  override getDeployTransaction(
    _contractOwner: string,
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _contractOwner,
      _name,
      _symbol,
      _decimals,
      _totalSupply,
      overrides || {}
    );
  }
  override attach(address: string): BadToken {
    return super.attach(address) as BadToken;
  }
  override connect(signer: Signer): BadToken__factory {
    return super.connect(signer) as BadToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BadTokenInterface {
    return new utils.Interface(_abi) as BadTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BadToken {
    return new Contract(address, _abi, signerOrProvider) as BadToken;
  }
}
