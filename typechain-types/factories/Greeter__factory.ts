/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_contractOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "sucess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "sucess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [
      {
        internalType: "bool",
        name: "sucess",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600881526020017f426164546f6b656e00000000000000000000000000000000000000000000000081525060009080519060200190620000519291906200012b565b506040518060400160405280600381526020017f4241440000000000000000000000000000000000000000000000000000000000815250600190805190602001906200009f9291906200012b565b50620f42406002556402540be400600355348015620000bd57600080fd5b50604051620017c7380380620017c78339818101604052810190620000e39190620001f2565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002d1565b828054620001399062000252565b90600052602060002090601f0160209004810192826200015d5760008555620001a9565b82601f106200017857805160ff1916838001178555620001a9565b82800160010185558215620001a9579182015b82811115620001a85782518255916020019190600101906200018b565b5b509050620001b89190620001bc565b5090565b5b80821115620001d7576000816000905550600101620001bd565b5090565b600081519050620001ec81620002b7565b92915050565b6000602082840312156200020557600080fd5b60006200021584828501620001db565b91505092915050565b60006200022b8262000232565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060028204905060018216806200026b57607f821691505b6020821081141562000282576200028162000288565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b620002c2816200021e565b8114620002ce57600080fd5b50565b6114e680620002e16000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806395d89b41146101d35780639dc29fac146101f1578063a9059cbb14610221578063dd62ed3e14610251578063f2fde38b14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce5671461015557806340c10f1914610173575b600080fd5b6100c16102b1565b6040516100ce91906110f0565b60405180910390f35b6100f160048036038101906100ec9190610f93565b61033f565b6040516100fe91906110d5565b60405180910390f35b61010f6104a0565b60405161011c91906111b2565b60405180910390f35b61013f600480360381019061013a9190610f44565b6104a6565b60405161014c91906110d5565b60405180910390f35b61015d610812565b60405161016a91906111b2565b60405180910390f35b61018d60048036038101906101889190610f93565b610818565b60405161019a91906110d5565b60405180910390f35b6101bd60048036038101906101b89190610edf565b61090a565b6040516101ca91906111b2565b60405180910390f35b6101db610953565b6040516101e891906110f0565b60405180910390f35b61020b60048036038101906102069190610f93565b6109e1565b60405161021891906110d5565b60405180910390f35b61023b60048036038101906102369190610f93565b610ad3565b60405161024891906110d5565b60405180910390f35b61026b60048036038101906102669190610f08565b610ce2565b60405161027891906111b2565b60405180910390f35b61029b60048036038101906102969190610edf565b610d69565b6040516102a891906110d5565b60405180910390f35b600080546102be906112ee565b80601f01602080910402602001604051908101604052809291908181526020018280546102ea906112ee565b80156103375780601f1061030c57610100808354040283529160200191610337565b820191906000526020600020905b81548152906001019060200180831161031a57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a790611132565b60405180910390fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161048e91906111b2565b60405180910390a36001905092915050565b60035481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e90611132565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e90611132565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610609576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060090611172565b60405180910390fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bf90611192565b60405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610717919061123f565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461076d91906111e9565b9250508190555081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610800919061123f565b92505081905550600190509392505050565b60025481565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a190611112565b60405180910390fd5b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108f991906111e9565b925050819055506001905092915050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60018054610960906112ee565b80601f016020809104026020016040519081016040528092919081815260200182805461098c906112ee565b80156109d95780601f106109ae576101008083540402835291602001916109d9565b820191906000526020600020905b8154815290600101906020018083116109bc57829003601f168201915b505050505081565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6a90611112565b60405180910390fd5b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ac2919061123f565b925050819055506001905092915050565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e90611152565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbe90611132565b60405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c16919061123f565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c6c91906111e9565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cd091906111b2565b60405180910390a36001905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df290611112565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6290611132565b60405180910390fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600081359050610ec481611482565b92915050565b600081359050610ed981611499565b92915050565b600060208284031215610ef157600080fd5b6000610eff84828501610eb5565b91505092915050565b60008060408385031215610f1b57600080fd5b6000610f2985828601610eb5565b9250506020610f3a85828601610eb5565b9150509250929050565b600080600060608486031215610f5957600080fd5b6000610f6786828701610eb5565b9350506020610f7886828701610eb5565b9250506040610f8986828701610eca565b9150509250925092565b60008060408385031215610fa657600080fd5b6000610fb485828601610eb5565b9250506020610fc585828601610eca565b9150509250929050565b610fd881611285565b82525050565b6000610fe9826111cd565b610ff381856111d8565b93506110038185602086016112bb565b61100c8161137e565b840191505092915050565b6000611024601e836111d8565b915061102f8261138f565b602082019050919050565b60006110476017836111d8565b9150611052826113b8565b602082019050919050565b600061106a6011836111d8565b9150611075826113e1565b602082019050919050565b600061108d6023836111d8565b91506110988261140a565b604082019050919050565b60006110b0601e836111d8565b91506110bb82611459565b602082019050919050565b6110cf816112b1565b82525050565b60006020820190506110ea6000830184610fcf565b92915050565b6000602082019050818103600083015261110a8184610fde565b905092915050565b6000602082019050818103600083015261112b81611017565b9050919050565b6000602082019050818103600083015261114b8161103a565b9050919050565b6000602082019050818103600083015261116b8161105d565b9050919050565b6000602082019050818103600083015261118b81611080565b9050919050565b600060208201905081810360008301526111ab816110a3565b9050919050565b60006020820190506111c760008301846110c6565b92915050565b600081519050919050565b600082825260208201905092915050565b60006111f4826112b1565b91506111ff836112b1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561123457611233611320565b5b828201905092915050565b600061124a826112b1565b9150611255836112b1565b92508282101561126857611267611320565b5b828203905092915050565b600061127e82611291565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156112d95780820151818401526020810190506112be565b838111156112e8576000848401525b50505050565b6000600282049050600182168061130657607f821691505b6020821081141561131a5761131961134f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f596f7520617265206e6f742074686520636f6e74726163744f776e65722e0000600082015250565b7f456d70747920616464726573732070726f76696465642e000000000000000000600082015250565b7f4e6f7420656e6f7567682066756e64732e000000000000000000000000000000600082015250565b7f4e6f7420656e6f7567682066756e6473206f6e2073656e6465722062616c616e60008201527f63652e0000000000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f7567682066756e6473207765726520616c6c6f7765642e0000600082015250565b61148b81611273565b811461149657600080fd5b50565b6114a2816112b1565b81146114ad57600080fd5b5056fea2646970667358221220dd099d353b03fe3516b86518780949ffe4e4f9842f6f565b4c9d632f3e8b68f464736f6c63430008040033";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _contractOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_contractOwner, overrides || {}) as Promise<Greeter>;
  }
  override getDeployTransaction(
    _contractOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_contractOwner, overrides || {});
  }
  override attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  override connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
